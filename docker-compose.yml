version: '3.8'

services:
  # PostgreSQL Database - Optimized for production
  db:
    image: postgres:15-alpine
    container_name: crm-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-crm_db}
      POSTGRES_USER: ${POSTGRES_USER:-crm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-crm_secure_password_2024}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-crm_user} -d ${POSTGRES_DB:-crm_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - crm-network

  # Redis - Optimized and secured
  redis:
    image: redis:7-alpine
    container_name: crm-redis
    restart: unless-stopped
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - crm-network

  # Backend API - Ultra-optimized
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: crm-backend:latest
    container_name: crm-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-crm_user}:${POSTGRES_PASSWORD:-crm_secure_password_2024}@db:5432/${POSTGRES_DB:-crm_db}?schema=public&connection_limit=20&pool_timeout=60
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-crm-mvp-ultra-secure-jwt-secret-2024-production}
      PORT: 3001
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      # WhatsApp API
      WHATSAPP_API_URL: ${WHATSAPP_API_URL:-https://waba.360dialog.io}
      WHATSAPP_API_TOKEN: ${WHATSAPP_API_TOKEN}
      WHATSAPP_WEBHOOK_SECRET: ${WHATSAPP_WEBHOOK_SECRET}
      # AI Services
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
      - "${SOCKET_PORT:-3002}:3002"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/uploads
    networks:
      - crm-network

  # Frontend - Ultra-optimized
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: crm-frontend:latest
    container_name: crm-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL:-http://localhost:3001}
      NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-ws://localhost:3001}
      NEXT_PUBLIC_DEMO_MODE: "false"
      PORT: 3000
      HOSTNAME: "0.0.0.0"
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/.next/cache
    networks:
      - crm-network

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}/redis

networks:
  crm-network:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      config:
        - subnet: 172.20.0.0/16