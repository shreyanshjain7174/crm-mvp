# Simple Dockerfile for Fly.io
# Single process approach with nginx reverse proxy

FROM node:24-alpine

# Install system dependencies
RUN apk add --no-cache \
    nginx \
    curl \
    supervisor

WORKDIR /app

# Copy package files for better caching
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
COPY apps/frontend/package*.json ./apps/frontend/

# Copy packages directory for workspaces
COPY packages/ ./packages/

# Install dependencies with legacy peer deps and verbose output
RUN npm cache clean --force && \
    npm install --legacy-peer-deps --verbose || \
    (cat /root/.npm/_logs/*.log && exit 1)

# Copy all source code
COPY . .

# Build backend
WORKDIR /app/apps/backend
RUN npm run build

# Build frontend
WORKDIR /app/apps/frontend
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
RUN npm run build

# Go back to app root
WORKDIR /app

# Copy nginx config
COPY infra/nginx/default.conf /etc/nginx/conf.d/default.conf

# Create startup script
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "Starting CRM MVP..."' >> /app/start.sh && \
    echo 'cd /app/apps/backend && npm start &' >> /app/start.sh && \
    echo 'cd /app/apps/frontend && npm start &' >> /app/start.sh && \
    echo 'nginx -g "daemon off;"' >> /app/start.sh && \
    chmod +x /app/start.sh

# Create nginx directories
RUN mkdir -p /var/log/nginx /var/lib/nginx/body /var/lib/nginx/fastcgi \
    /var/lib/nginx/proxy /var/lib/nginx/scgi /var/lib/nginx/uwsgi

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start application
CMD ["/app/start.sh"]